name: Deployment Workflow

on:
  push:
    branches:
      - develop
      - master

jobs:
  determine_environment:
    runs-on: ubuntu-latest
    outputs:
      environment_name: ${{ steps.set-env.outputs.environment_name }}
    steps:
      - name: Set environment based on branch
        id: set-env
        run: |
          if [[ $GITHUB_REF == "refs/heads/master" ]]; then
            echo "environment_name=prod" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == "refs/heads/develop" ]]; then
            echo "environment_name=develop" >> $GITHUB_OUTPUT
          else
            echo "environment_name=develop" >> $GITHUB_OUTPUT
          fi
  unit-test:
    needs: determine_environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Run unit tests using spark emulation container
      - name: Run unit tests with simulate spark container
        run: |
          echo "Running unit tests with simulate spark container"
          
  code-quality:
    needs: determine_environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Run code quality checks
      - name: Run code quality checks with sonarqube
        run: |
          echo "Running code quality checks with sonarqube"
          
  deploy:
    needs: [unit-test, code-quality]
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment_name }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      # Use AWS CLI to upload files to S3 without specifying ACLs
      - name: Upload ETL scripts to S3
        run: |
          aws s3 sync scripts/ s3://${{ secrets.DATAOPS_BUCKET }}/scripts/ --delete
        # The --delete flag ensures that files removed from the source are also removed from the destination
      
      - name: Trigger the data-pipeline workflow
        run: |
          echo "Triggering the data-pipeline workflow"
          aws glue start-workflow-run --name ${{ secrets.DATAOPS_WORKFLOW_NAME }}
          